// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive_arrays.proto

#ifndef PROTOBUF_primitive_5farrays_2eproto__INCLUDED
#define PROTOBUF_primitive_5farrays_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace em_benchmarks {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_primitive_5farrays_2eproto();
void protobuf_AssignDesc_primitive_5farrays_2eproto();
void protobuf_ShutdownFile_primitive_5farrays_2eproto();

class PrimitiveArrays;

// ===================================================================

class PrimitiveArrays : public ::google::protobuf::Message {
 public:
  PrimitiveArrays();
  virtual ~PrimitiveArrays();

  PrimitiveArrays(const PrimitiveArrays& from);

  inline PrimitiveArrays& operator=(const PrimitiveArrays& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrimitiveArrays& default_instance();

  void Swap(PrimitiveArrays* other);

  // implements Message ----------------------------------------------

  PrimitiveArrays* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrimitiveArrays& from);
  void MergeFrom(const PrimitiveArrays& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 int32_value = 1;
  inline int int32_value_size() const;
  inline void clear_int32_value();
  static const int kInt32ValueFieldNumber = 1;
  inline ::google::protobuf::int32 int32_value(int index) const;
  inline void set_int32_value(int index, ::google::protobuf::int32 value);
  inline void add_int32_value(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_value();

  // repeated uint32 uint32_value = 2;
  inline int uint32_value_size() const;
  inline void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 2;
  inline ::google::protobuf::uint32 uint32_value(int index) const;
  inline void set_uint32_value(int index, ::google::protobuf::uint32 value);
  inline void add_uint32_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uint32_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uint32_value();

  // repeated int64 int64_value = 3;
  inline int int64_value_size() const;
  inline void clear_int64_value();
  static const int kInt64ValueFieldNumber = 3;
  inline ::google::protobuf::int64 int64_value(int index) const;
  inline void set_int64_value(int index, ::google::protobuf::int64 value);
  inline void add_int64_value(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      int64_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_int64_value();

  // repeated uint64 uint64_value = 4;
  inline int uint64_value_size() const;
  inline void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 4;
  inline ::google::protobuf::uint64 uint64_value(int index) const;
  inline void set_uint64_value(int index, ::google::protobuf::uint64 value);
  inline void add_uint64_value(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uint64_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uint64_value();

  // repeated double double_value = 5;
  inline int double_value_size() const;
  inline void clear_double_value();
  static const int kDoubleValueFieldNumber = 5;
  inline double double_value(int index) const;
  inline void set_double_value(int index, double value);
  inline void add_double_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      double_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_double_value();

  // repeated float float_value = 6;
  inline int float_value_size() const;
  inline void clear_float_value();
  static const int kFloatValueFieldNumber = 6;
  inline float float_value(int index) const;
  inline void set_float_value(int index, float value);
  inline void add_float_value(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      float_value() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_float_value();

  // repeated bool bool_value = 7;
  inline int bool_value_size() const;
  inline void clear_bool_value();
  static const int kBoolValueFieldNumber = 7;
  inline bool bool_value(int index) const;
  inline void set_bool_value(int index, bool value);
  inline void add_bool_value(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      bool_value() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_bool_value();

  // repeated string string_value = 8;
  inline int string_value_size() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 8;
  inline const ::std::string& string_value(int index) const;
  inline ::std::string* mutable_string_value(int index);
  inline void set_string_value(int index, const ::std::string& value);
  inline void set_string_value(int index, const char* value);
  inline void set_string_value(int index, const char* value, size_t size);
  inline ::std::string* add_string_value();
  inline void add_string_value(const ::std::string& value);
  inline void add_string_value(const char* value);
  inline void add_string_value(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& string_value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_value();

  // @@protoc_insertion_point(class_scope:em_benchmarks.PrimitiveArrays)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uint32_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uint64_value_;
  ::google::protobuf::RepeatedField< double > double_value_;
  ::google::protobuf::RepeatedField< float > float_value_;
  ::google::protobuf::RepeatedField< bool > bool_value_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_value_;
  friend void  protobuf_AddDesc_primitive_5farrays_2eproto();
  friend void protobuf_AssignDesc_primitive_5farrays_2eproto();
  friend void protobuf_ShutdownFile_primitive_5farrays_2eproto();

  void InitAsDefaultInstance();
  static PrimitiveArrays* default_instance_;
};
// ===================================================================


// ===================================================================

// PrimitiveArrays

// repeated int32 int32_value = 1;
inline int PrimitiveArrays::int32_value_size() const {
  return int32_value_.size();
}
inline void PrimitiveArrays::clear_int32_value() {
  int32_value_.Clear();
}
inline ::google::protobuf::int32 PrimitiveArrays::int32_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.int32_value)
  return int32_value_.Get(index);
}
inline void PrimitiveArrays::set_int32_value(int index, ::google::protobuf::int32 value) {
  int32_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.int32_value)
}
inline void PrimitiveArrays::add_int32_value(::google::protobuf::int32 value) {
  int32_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.int32_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrimitiveArrays::int32_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.int32_value)
  return int32_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrimitiveArrays::mutable_int32_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.int32_value)
  return &int32_value_;
}

// repeated uint32 uint32_value = 2;
inline int PrimitiveArrays::uint32_value_size() const {
  return uint32_value_.size();
}
inline void PrimitiveArrays::clear_uint32_value() {
  uint32_value_.Clear();
}
inline ::google::protobuf::uint32 PrimitiveArrays::uint32_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.uint32_value)
  return uint32_value_.Get(index);
}
inline void PrimitiveArrays::set_uint32_value(int index, ::google::protobuf::uint32 value) {
  uint32_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.uint32_value)
}
inline void PrimitiveArrays::add_uint32_value(::google::protobuf::uint32 value) {
  uint32_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.uint32_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PrimitiveArrays::uint32_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.uint32_value)
  return uint32_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PrimitiveArrays::mutable_uint32_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.uint32_value)
  return &uint32_value_;
}

// repeated int64 int64_value = 3;
inline int PrimitiveArrays::int64_value_size() const {
  return int64_value_.size();
}
inline void PrimitiveArrays::clear_int64_value() {
  int64_value_.Clear();
}
inline ::google::protobuf::int64 PrimitiveArrays::int64_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.int64_value)
  return int64_value_.Get(index);
}
inline void PrimitiveArrays::set_int64_value(int index, ::google::protobuf::int64 value) {
  int64_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.int64_value)
}
inline void PrimitiveArrays::add_int64_value(::google::protobuf::int64 value) {
  int64_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.int64_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PrimitiveArrays::int64_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.int64_value)
  return int64_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PrimitiveArrays::mutable_int64_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.int64_value)
  return &int64_value_;
}

// repeated uint64 uint64_value = 4;
inline int PrimitiveArrays::uint64_value_size() const {
  return uint64_value_.size();
}
inline void PrimitiveArrays::clear_uint64_value() {
  uint64_value_.Clear();
}
inline ::google::protobuf::uint64 PrimitiveArrays::uint64_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.uint64_value)
  return uint64_value_.Get(index);
}
inline void PrimitiveArrays::set_uint64_value(int index, ::google::protobuf::uint64 value) {
  uint64_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.uint64_value)
}
inline void PrimitiveArrays::add_uint64_value(::google::protobuf::uint64 value) {
  uint64_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.uint64_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PrimitiveArrays::uint64_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.uint64_value)
  return uint64_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PrimitiveArrays::mutable_uint64_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.uint64_value)
  return &uint64_value_;
}

// repeated double double_value = 5;
inline int PrimitiveArrays::double_value_size() const {
  return double_value_.size();
}
inline void PrimitiveArrays::clear_double_value() {
  double_value_.Clear();
}
inline double PrimitiveArrays::double_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.double_value)
  return double_value_.Get(index);
}
inline void PrimitiveArrays::set_double_value(int index, double value) {
  double_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.double_value)
}
inline void PrimitiveArrays::add_double_value(double value) {
  double_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.double_value)
}
inline const ::google::protobuf::RepeatedField< double >&
PrimitiveArrays::double_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.double_value)
  return double_value_;
}
inline ::google::protobuf::RepeatedField< double >*
PrimitiveArrays::mutable_double_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.double_value)
  return &double_value_;
}

// repeated float float_value = 6;
inline int PrimitiveArrays::float_value_size() const {
  return float_value_.size();
}
inline void PrimitiveArrays::clear_float_value() {
  float_value_.Clear();
}
inline float PrimitiveArrays::float_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.float_value)
  return float_value_.Get(index);
}
inline void PrimitiveArrays::set_float_value(int index, float value) {
  float_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.float_value)
}
inline void PrimitiveArrays::add_float_value(float value) {
  float_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.float_value)
}
inline const ::google::protobuf::RepeatedField< float >&
PrimitiveArrays::float_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.float_value)
  return float_value_;
}
inline ::google::protobuf::RepeatedField< float >*
PrimitiveArrays::mutable_float_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.float_value)
  return &float_value_;
}

// repeated bool bool_value = 7;
inline int PrimitiveArrays::bool_value_size() const {
  return bool_value_.size();
}
inline void PrimitiveArrays::clear_bool_value() {
  bool_value_.Clear();
}
inline bool PrimitiveArrays::bool_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.bool_value)
  return bool_value_.Get(index);
}
inline void PrimitiveArrays::set_bool_value(int index, bool value) {
  bool_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.bool_value)
}
inline void PrimitiveArrays::add_bool_value(bool value) {
  bool_value_.Add(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.bool_value)
}
inline const ::google::protobuf::RepeatedField< bool >&
PrimitiveArrays::bool_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.bool_value)
  return bool_value_;
}
inline ::google::protobuf::RepeatedField< bool >*
PrimitiveArrays::mutable_bool_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.bool_value)
  return &bool_value_;
}

// repeated string string_value = 8;
inline int PrimitiveArrays::string_value_size() const {
  return string_value_.size();
}
inline void PrimitiveArrays::clear_string_value() {
  string_value_.Clear();
}
inline const ::std::string& PrimitiveArrays::string_value(int index) const {
  // @@protoc_insertion_point(field_get:em_benchmarks.PrimitiveArrays.string_value)
  return string_value_.Get(index);
}
inline ::std::string* PrimitiveArrays::mutable_string_value(int index) {
  // @@protoc_insertion_point(field_mutable:em_benchmarks.PrimitiveArrays.string_value)
  return string_value_.Mutable(index);
}
inline void PrimitiveArrays::set_string_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:em_benchmarks.PrimitiveArrays.string_value)
  string_value_.Mutable(index)->assign(value);
}
inline void PrimitiveArrays::set_string_value(int index, const char* value) {
  string_value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:em_benchmarks.PrimitiveArrays.string_value)
}
inline void PrimitiveArrays::set_string_value(int index, const char* value, size_t size) {
  string_value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:em_benchmarks.PrimitiveArrays.string_value)
}
inline ::std::string* PrimitiveArrays::add_string_value() {
  return string_value_.Add();
}
inline void PrimitiveArrays::add_string_value(const ::std::string& value) {
  string_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:em_benchmarks.PrimitiveArrays.string_value)
}
inline void PrimitiveArrays::add_string_value(const char* value) {
  string_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:em_benchmarks.PrimitiveArrays.string_value)
}
inline void PrimitiveArrays::add_string_value(const char* value, size_t size) {
  string_value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:em_benchmarks.PrimitiveArrays.string_value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PrimitiveArrays::string_value() const {
  // @@protoc_insertion_point(field_list:em_benchmarks.PrimitiveArrays.string_value)
  return string_value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PrimitiveArrays::mutable_string_value() {
  // @@protoc_insertion_point(field_mutable_list:em_benchmarks.PrimitiveArrays.string_value)
  return &string_value_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace em_benchmarks

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_primitive_5farrays_2eproto__INCLUDED
